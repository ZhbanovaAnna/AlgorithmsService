package ru.unn.webservice.client;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;

public final class View {
    private Client viewmodel;
    private JPanel mainPanel;
    private JButton registerButton;
    private JButton loginButton;
    private JPanel searchPanel;
    private JButton searchButton;
    private JTextField textField1;
    private JFormattedTextField browser;
    private JPanel authorizationPanel;
    private JPanel browserPanel;
    private JPanel userPanel;
    private JPanel userProfilePanel;
    private JTextField loginField;
    private JTextField passwordField;
    private JCheckBox developerCheckBox;
    private JLabel loginLabel;
    private JLabel passwordLabel;
    private JLabel authorizationStatusLabel;
    private JButton authorizationSubmitButton;
    private JButton authorizationBackButton;

    private boolean isRegisterMode;

    private View() {
        viewmodel = new Client();

        registerButton.addActionListener(e -> {
            loginLabel.setVisible(true);
            passwordLabel.setVisible(true);
            loginField.setVisible(true);
            passwordField.setVisible(true);
            authorizationSubmitButton.setVisible(true);
            authorizationBackButton.setVisible(true);
            developerCheckBox.setVisible(true);
            loginButton.setVisible(false);
            registerButton.setVisible(false);
            isRegisterMode = true;
        });

        loginButton.addActionListener(e -> {
            loginLabel.setVisible(true);
            passwordLabel.setVisible(true);
            loginField.setVisible(true);
            passwordField.setVisible(true);
            authorizationSubmitButton.setVisible(true);
            authorizationBackButton.setVisible(true);
            loginButton.setVisible(false);
            registerButton.setVisible(false);
            isRegisterMode = false;
        });

        authorizationBackButton.addActionListener(e -> {
            loginLabel.setVisible(false);
            passwordLabel.setVisible(false);
            loginField.setVisible(false);
            passwordField.setVisible(false);
            authorizationSubmitButton.setVisible(false);
            authorizationBackButton.setVisible(false);
            developerCheckBox.setVisible(false);
            loginButton.setVisible(true);
            registerButton.setVisible(true);
            authorizationStatusLabel.setVisible(false);
        });

        authorizationSubmitButton.addActionListener(e -> {
            bind();
            if (isRegisterMode) {
                viewmodel.register();
            } else {
                viewmodel.authorize();
            }
            backBind();
            authorizationStatusLabel.setVisible(true);
        });
    }

    private View(final Client viewModel) {
        this.viewmodel = viewModel;
    }

    public static void main(final String[] args) {
        JFrame frame = new JFrame("Algorithm webservice client");

        frame.setContentPane(new View().mainPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    private void bind() {
        viewmodel.setLogin(loginField.getText());
        viewmodel.setPassword(passwordField.getText());
        viewmodel.setIsDeveloper(developerCheckBox.isSelected());
    }

    private void backBind() {
        authorizationStatusLabel.setText(viewmodel.getAuthorizationStatus());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setMaximumSize(new Dimension(1920, 1080));
        mainPanel.setMinimumSize(new Dimension(320, 240));
        mainPanel.setPreferredSize(new Dimension(800, 600));
        mainPanel.setRequestFocusEnabled(false);
        browserPanel = new JPanel();
        browserPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(browserPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        browser = new JFormattedTextField();
        browserPanel.add(browser, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(300, 300), null, 0, false));
        searchPanel = new JPanel();
        searchPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(searchPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        textField1 = new JTextField();
        searchPanel.add(textField1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        searchButton = new JButton();
        searchButton.setText("Search");
        searchPanel.add(searchButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        userPanel = new JPanel();
        userPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(userPanel, new GridConstraints(0, 1, 3, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        authorizationPanel = new JPanel();
        authorizationPanel.setLayout(new GridLayoutManager(6, 3, new Insets(0, 0, 0, 0), -1, -1));
        userPanel.add(authorizationPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, 1, 1, null, null, null, 0, false));
        loginButton = new JButton();
        loginButton.setText("Log In");
        authorizationPanel.add(loginButton, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        registerButton = new JButton();
        registerButton.setText("Register");
        authorizationPanel.add(registerButton, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        loginField = new JTextField();
        loginField.setText("");
        loginField.setToolTipText("");
        loginField.setVisible(false);
        authorizationPanel.add(loginField, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        passwordField = new JTextField();
        passwordField.setVisible(false);
        authorizationPanel.add(passwordField, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        loginLabel = new JLabel();
        loginLabel.setText("Login: ");
        loginLabel.setVisible(false);
        authorizationPanel.add(loginLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(146, 18), null, 0, false));
        authorizationStatusLabel = new JLabel();
        authorizationStatusLabel.setText("");
        authorizationStatusLabel.setVisible(false);
        authorizationPanel.add(authorizationStatusLabel, new GridConstraints(5, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passwordLabel = new JLabel();
        passwordLabel.setText("Password:");
        passwordLabel.setVisible(false);
        authorizationPanel.add(passwordLabel, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(146, 18), null, 0, false));
        developerCheckBox = new JCheckBox();
        developerCheckBox.setText("Register as developer?");
        developerCheckBox.setVisible(false);
        authorizationPanel.add(developerCheckBox, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(146, 24), null, 0, false));
        authorizationSubmitButton = new JButton();
        authorizationSubmitButton.setText("Submit");
        authorizationSubmitButton.setVisible(false);
        authorizationPanel.add(authorizationSubmitButton, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        authorizationBackButton = new JButton();
        authorizationBackButton.setText("Back");
        authorizationBackButton.setVisible(false);
        authorizationPanel.add(authorizationBackButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        userProfilePanel = new JPanel();
        userProfilePanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        userProfilePanel.setVisible(false);
        userPanel.add(userProfilePanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Label");
        userProfilePanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
